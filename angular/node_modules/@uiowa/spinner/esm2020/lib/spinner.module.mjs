import { NgModule } from '@angular/core';
import { CommonModule } from '@angular/common';
import { ActionSpinnerComponent } from './action-spinner/action-spinner.component';
import { LoadingBarComponent } from './loading-bar/loading-bar.component';
import { UiowaRingComponent } from './uiowa-ring/uiowa-ring.component';
import { LoadingPlaceholderComponent } from './loading-placeholder/loading-placeholder.component';
import * as i0 from "@angular/core";
export class SpinnerModule {
}
SpinnerModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.3.11", ngImport: i0, type: SpinnerModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });
SpinnerModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "13.3.11", ngImport: i0, type: SpinnerModule, declarations: [ActionSpinnerComponent,
        LoadingBarComponent,
        UiowaRingComponent,
        LoadingPlaceholderComponent], imports: [CommonModule], exports: [ActionSpinnerComponent,
        LoadingBarComponent,
        UiowaRingComponent,
        LoadingPlaceholderComponent] });
SpinnerModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "13.3.11", ngImport: i0, type: SpinnerModule, imports: [[CommonModule]] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.3.11", ngImport: i0, type: SpinnerModule, decorators: [{
            type: NgModule,
            args: [{
                    imports: [CommonModule],
                    declarations: [
                        ActionSpinnerComponent,
                        LoadingBarComponent,
                        UiowaRingComponent,
                        LoadingPlaceholderComponent,
                    ],
                    exports: [
                        ActionSpinnerComponent,
                        LoadingBarComponent,
                        UiowaRingComponent,
                        LoadingPlaceholderComponent,
                    ],
                }]
        }] });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic3Bpbm5lci5tb2R1bGUuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi9wcm9qZWN0cy91aW93YS9zcGlubmVyL3NyYy9saWIvc3Bpbm5lci5tb2R1bGUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLFFBQVEsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUN6QyxPQUFPLEVBQUUsWUFBWSxFQUFFLE1BQU0saUJBQWlCLENBQUM7QUFDL0MsT0FBTyxFQUFFLHNCQUFzQixFQUFFLE1BQU0sMkNBQTJDLENBQUM7QUFDbkYsT0FBTyxFQUFFLG1CQUFtQixFQUFFLE1BQU0scUNBQXFDLENBQUM7QUFDMUUsT0FBTyxFQUFFLGtCQUFrQixFQUFFLE1BQU0sbUNBQW1DLENBQUM7QUFDdkUsT0FBTyxFQUFFLDJCQUEyQixFQUFFLE1BQU0scURBQXFELENBQUM7O0FBaUJsRyxNQUFNLE9BQU8sYUFBYTs7MkdBQWIsYUFBYTs0R0FBYixhQUFhLGlCQVp0QixzQkFBc0I7UUFDdEIsbUJBQW1CO1FBQ25CLGtCQUFrQjtRQUNsQiwyQkFBMkIsYUFMbkIsWUFBWSxhQVFwQixzQkFBc0I7UUFDdEIsbUJBQW1CO1FBQ25CLGtCQUFrQjtRQUNsQiwyQkFBMkI7NEdBR2xCLGFBQWEsWUFkZixDQUFDLFlBQVksQ0FBQzs0RkFjWixhQUFhO2tCQWZ6QixRQUFRO21CQUFDO29CQUNSLE9BQU8sRUFBRSxDQUFDLFlBQVksQ0FBQztvQkFDdkIsWUFBWSxFQUFFO3dCQUNaLHNCQUFzQjt3QkFDdEIsbUJBQW1CO3dCQUNuQixrQkFBa0I7d0JBQ2xCLDJCQUEyQjtxQkFDNUI7b0JBQ0QsT0FBTyxFQUFFO3dCQUNQLHNCQUFzQjt3QkFDdEIsbUJBQW1CO3dCQUNuQixrQkFBa0I7d0JBQ2xCLDJCQUEyQjtxQkFDNUI7aUJBQ0YiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBOZ01vZHVsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xyXG5pbXBvcnQgeyBDb21tb25Nb2R1bGUgfSBmcm9tICdAYW5ndWxhci9jb21tb24nO1xyXG5pbXBvcnQgeyBBY3Rpb25TcGlubmVyQ29tcG9uZW50IH0gZnJvbSAnLi9hY3Rpb24tc3Bpbm5lci9hY3Rpb24tc3Bpbm5lci5jb21wb25lbnQnO1xyXG5pbXBvcnQgeyBMb2FkaW5nQmFyQ29tcG9uZW50IH0gZnJvbSAnLi9sb2FkaW5nLWJhci9sb2FkaW5nLWJhci5jb21wb25lbnQnO1xyXG5pbXBvcnQgeyBVaW93YVJpbmdDb21wb25lbnQgfSBmcm9tICcuL3Vpb3dhLXJpbmcvdWlvd2EtcmluZy5jb21wb25lbnQnO1xyXG5pbXBvcnQgeyBMb2FkaW5nUGxhY2Vob2xkZXJDb21wb25lbnQgfSBmcm9tICcuL2xvYWRpbmctcGxhY2Vob2xkZXIvbG9hZGluZy1wbGFjZWhvbGRlci5jb21wb25lbnQnO1xyXG5cclxuQE5nTW9kdWxlKHtcclxuICBpbXBvcnRzOiBbQ29tbW9uTW9kdWxlXSxcclxuICBkZWNsYXJhdGlvbnM6IFtcclxuICAgIEFjdGlvblNwaW5uZXJDb21wb25lbnQsXHJcbiAgICBMb2FkaW5nQmFyQ29tcG9uZW50LFxyXG4gICAgVWlvd2FSaW5nQ29tcG9uZW50LFxyXG4gICAgTG9hZGluZ1BsYWNlaG9sZGVyQ29tcG9uZW50LFxyXG4gIF0sXHJcbiAgZXhwb3J0czogW1xyXG4gICAgQWN0aW9uU3Bpbm5lckNvbXBvbmVudCxcclxuICAgIExvYWRpbmdCYXJDb21wb25lbnQsXHJcbiAgICBVaW93YVJpbmdDb21wb25lbnQsXHJcbiAgICBMb2FkaW5nUGxhY2Vob2xkZXJDb21wb25lbnQsXHJcbiAgXSxcclxufSlcclxuZXhwb3J0IGNsYXNzIFNwaW5uZXJNb2R1bGUge31cclxuIl19